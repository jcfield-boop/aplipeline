{
  "name": "APLCICD",
  "version": "2.0.0",
  "description": "Production-Ready APL CI/CD System with Vibe Coding, Comprehensive Monitoring & Analytics",
  "author": "APL Forge Contest 2025",
  "license": "MIT",
  "dyalog_version": "19.0",
  "main": "./src/APLCICD.dyalog",
  "startup": "APLCICD.Initialize",
  "target": "1",
  "dependencies": {
    "Conga": "*",
    "HttpCommand": "*"
  },
  "optional_dependencies": {
    "JSONlib": "*"
  },
  "exports": {
    "APLCICD": "./src/APLCICD.dyalog",
    "APLCICD.Pipeline": "./src/Pipeline.dyalog",
    "APLCICD.Monitor": "./src/Monitor.dyalog",
    "APLCICD.Config": "./src/Config.dyalog",
    "APLCICD.GitAPL": "./src/GitAPL.dyalog",
    "APLCICD.Vibe": "./src/vibe.dyalog",
    "APLCICD.SelfOptimizer": "./src/SelfOptimizer.dyalog",
    "APLCICD.Tests": "./src/Tests.dyalog"
  },
  "api": {
    "entry_points": [
      "APLCICD.Initialize",
      "APLCICD.TestCI",
      "APLCICD.SelfOptimize",
      "APLCICD.MonitoringStats",
      "APLCICD.AnalyzeProject",
      "Pipeline.Run",
      "Monitor.LogPipelineExecution", 
      "Monitor.GetUsageStats",
      "Monitor.UpdateUsageMetrics",
      "Vibe.Compress",
      "Vibe.Decompress",
      "GitAPL.GitStatus",
      "GitAPL.GitCommit"
    ],
    "web_endpoints": [
      "/",
      "/api/pipeline/run",
      "/api/pipeline/status", 
      "/api/monitoring/stats",
      "/api/monitoring/health",
      "/api/monitoring/usage",
      "/api/analytics/performance",
      "/api/analytics/trends",
      "/api/vibe/compress",
      "/api/vibe/status",
      "/api/quality/analysis",
      "/api/security/scan",
      "/api/validation/check",
      "/api/system/status",
      "/api/system/health",
      "/api/git/status",
      "/api/git/commit",
      "/api/project/analyze"
    ]
  },
  "config": {
    "default_config": "./config/default.json",
    "log_level": "info",
    "web_port": 8081,
    "auto_start_dashboard": true,
    "vibe_compression": true
  },
  "files": {
    "include": [
      "src/*.dyalog",
      "config/*.json",
      "web/*.html",
      "README.md",
      "CLAUDE.md"
    ],
    "exclude": [
      "*.tmp",
      "*.log",
      "*.bak",
      "aplcore"
    ]
  },
  "scripts": {
    "start": "./aplcicd test",
    "demo": "./aplcicd demo", 
    "test": "./aplcicd pipeline",
    "benchmark": "./aplcicd benchmark",
    "stats": "./aplcicd stats",
    "status": "./aplcicd status",
    "optimize": "./aplcicd optimize",
    "analyze": "./aplcicd analyze"
  },
  "keywords": [
    "CI/CD", 
    "APL", 
    "Vibe Coding", 
    "LLM Co-Creation", 
    "Token Compression", 
    "Production Monitoring",
    "Usage Analytics", 
    "Performance Tracking",
    "Self-Improving", 
    "Real-Time Analytics", 
    "GitHub Integration", 
    "Meta-Programming",
    "Quality Analysis",
    "Security Scanning",
    "Trend Analysis",
    "Dyalog APL"
  ],
  "homepage": "https://github.com/jcfield-boop/aplipeline",
  "repository": {
    "type": "git",
    "url": "https://github.com/jcfield-boop/aplipeline.git"
  },
  "contest": {
    "name": "Dyalog APL Forge Contest 2025",
    "category": "Vibe Coding",
    "theme": "Self-Improving Systems",
    "features": [
      "Production CI/CD Pipeline with validation, security scanning, and quality analysis",
      "Comprehensive monitoring with usage analytics and performance tracking",
      "Real-time error analysis and failure diagnostics with detailed logging",
      "Usage trend analysis with success rate tracking and performance optimization",
      "Vibe coding compression for LLM co-creation (measured compression varies by content)",
      "Stage-by-stage pipeline timing with millisecond precision performance metrics",
      "Self-optimization with meta-programming capabilities and recursive analysis", 
      "External APL project analysis with compression potential and CI/CD readiness assessment",
      "Interactive monitoring stats with comprehensive system health reporting",
      "Zero-mock implementation - all functionality production-ready including real Git integration",
      "Unified architecture with standardized error handling across all modules",
      "Persistent usage analytics with 100-execution history and trend calculation",
      "Quality score tracking over time with performance breakdown by pipeline stage",
      "System health monitoring with uptime tracking and log entry management"
    ],
    "innovations": [
      "Production-grade monitoring and analytics system built entirely in APL",
      "Comprehensive usage tracking with trend analysis and performance optimization insights",
      "Real-time pipeline monitoring with stage-by-stage performance breakdown",
      "Self-analyzing system that can monitor and report on its own performance",
      "Vibe coding approach optimized for LLM co-creation workflows",
      "Unified architecture with standardized error handling and comprehensive logging",
      "Zero-dependency monitoring system with persistent analytics storage"
    ]
  },
  "performance": {
    "monitoring_precision": "millisecond-level timing for all pipeline stages",
    "analytics_retention": "100-execution history with trend analysis",
    "success_rate_tracking": "real-time calculation with recent vs historical comparison", 
    "error_analysis": "comprehensive failure diagnostics with categorized logging",
    "usage_insights": "execution patterns, frequency analysis, and performance optimization",
    "vibe_compression": "measured compression varies by content with LLM optimization",
    "pipeline_efficiency": "stage-by-stage performance breakdown and bottleneck identification",
    "system_health": "uptime tracking, memory usage, and module health monitoring"
  },
  "production": {
    "readiness": "fully production-ready with comprehensive monitoring and analytics",
    "monitoring": "real-time usage analytics with performance tracking and trend analysis",
    "error_handling": "detailed failure analysis with categorized logging and diagnostics",
    "performance_tracking": "stage-by-stage timing with bottleneck identification and optimization insights",
    "usage_analytics": "execution patterns, success rates, and quality score tracking over time",
    "scalability": "horizontal scaling with persistent analytics storage",
    "reliability": "robust error handling with comprehensive audit trails",
    "observability": "full system health monitoring with uptime and resource tracking"
  }
}