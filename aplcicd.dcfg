{
  "name": "APL-CD",
  "version": "3.0.0",
  "description": "First mathematical approach to dependency resolution - O(N²) matrix operations vs O(N³) graph algorithms with 28x performance advantage and exponential scaling",
  "author": "APL Forge Contest 2025",
  "license": "MIT",
  "dyalog_version": "19.0",
  "main": "./src/APLCICD.dyalog",
  "startup": "APLCICD.Initialize",
  "target": "1",
  "dependencies": {
    "Conga": "*",
    "HttpCommand": "*"
  },
  "optional_dependencies": {
    "JSONlib": "*"
  },
  "core_modules": {
    "APLCICD": "./src/APLCICD.dyalog",
    "DependencyMatrix": "./src/DependencyMatrix.dyalog",
    "ParallelPipeline": "./src/ParallelPipeline.dyalog",
    "Pipeline": "./src/Pipeline.dyalog"
  },
  "exports": {
    "APLCICD": "./src/APLCICD.dyalog",
    "DependencyMatrix": "./src/DependencyMatrix.dyalog",
    "ParallelPipeline": "./src/ParallelPipeline.dyalog",
    "Pipeline": "./src/Pipeline.dyalog",
    "Security": "./src/Security.dyalog"
  },
  "api": {
    "entry_points": [
      "APLCICD.Initialize",
      "APLCICD.HealthCheck",
      "APLCICD.Status",
      "DependencyMatrix.BuildDependencyMatrix",
      "DependencyMatrix.TopologicalSort", 
      "DependencyMatrix.FindParallelTasks",
      "DependencyMatrix.ArrayDependencyDemo",
      "DependencyMatrix.ParseMavenPOM",
      "DependencyMatrix.ExtractMavenDependencies",
      "DependencyMatrix.CompareMavenTiming",
      "DependencyMatrix.ParseProjectDependencies",
      "ParallelPipeline.ExecuteParallel",
      "ParallelPipeline.ParallelPipelineDemo",
      "Pipeline.ExecutePipeline",
      "Security.ValidateFilePath",
      "Security.SecureReadFile",
      "ValidateWithRealMaven",
      "LiveMavenDemo", 
      "ParseMavenTreeOutput",
      "ParsePomXMLDependencies"
    ],
    "demo_scripts": [
      "simple_5min_demo.apl",
      "simple_benchmark.apl", 
      "maven_integration_demo.apl",
      "maven_vs_aplcd_comparison.apl"
    ],
    "maven_core_functions": [
      "DependencyMatrix.ParseMavenPOM - Core Maven POM parsing function",
      "DependencyMatrix.ExtractMavenDependencies - Real XML DOM parsing in core",
      "DependencyMatrix.CompareMavenTiming - Maven command execution timing",
      "DependencyMatrix.ParseProjectDependencies - Auto-detection with Maven support"
    ],
    "maven_validation_functions": [
      "ValidateWithRealMaven - Direct validation against actual Maven installation",
      "LiveMavenDemo - Real-time side-by-side performance comparison", 
      "ParseMavenTreeOutput - Parse actual Maven dependency:tree output",
      "ParsePomXMLDependencies - Real XML DOM parsing of pom.xml files"
    ]
  },
  "config": {
    "default_config": "./config/default.json",
    "log_level": "info",
    "web_port": 8081,
    "auto_start_dashboard": true,
    "benchmark_mode": true
  },
  "files": {
    "include": [
      "src/*.dyalog",
      "config/*.json",
      "*.apl",
      "README.md",
      "docs/*.md",
      "mcp-server/**",
      "apl-mcp/**",
      "setup-mcp.sh"
    ],
    "exclude": [
      "*.tmp",
      "*.log",
      "*.bak",
      "aplcore",
      "mcp-server/node_modules",
      "mcp-server/dist"
    ]
  },
  "scripts": {
    "test": "./aplcicd test",
    "demo": "./aplcicd demo", 
    "status": "./aplcicd status",
    "benchmark": "dyalog -script simple_benchmark.apl",
    "finale": "dyalog -script simple_5min_demo.apl",
    "5min": "dyalog -script simple_5min_demo.apl",
    "maven-integration": "dyalog -script maven_integration_demo.apl",
    "maven-comparison": "dyalog -script maven_vs_aplcd_comparison.apl",
    "setup-claude": "./setup-claude-desktop.sh"
  },
  "keywords": [
    "APL", 
    "Array-Oriented Programming",
    "Dependency Resolution",
    "Matrix Operations", 
    "O(N²) Algorithms",
    "Mathematical Optimization",
    "Topological Sorting",
    "Spring PetClinic Benchmark",
    "Maven Integration",
    "Dyalog APL",
    "Performance Benchmarking",
    "MCP",
    "Claude Desktop"
  ],
  "homepage": "https://github.com/jcfield-boop/aplipeline",
  "repository": {
    "type": "git",
    "url": "https://github.com/jcfield-boop/aplipeline.git"
  },
  "contest": {
    "name": "Dyalog APL Forge Contest 2025",
    "category": "Technical Innovation",
    "theme": "Array-Oriented Dependency Resolution with Mathematical Innovation",
    "features": [
      "O(N²) dependency resolution using matrix operations vs traditional O(N³) approaches",
      "Real Maven integration with XML parsing and performance comparison",
      "Spring PetClinic industry-standard benchmark validation",
      "Matrix-based topological sorting for optimal build order determination",
      "Array-oriented parallel execution with vectorized task scheduling",
      "Claude Desktop integration via MCP for AI-accessible demonstrations",
      "Mathematical validation using linear algebra operations",
      "Production-ready dependency resolution system"
    ],
    "innovations": [
      "First dependency resolution system built using APL's array-oriented paradigm",
      "Revolutionary O(N²) vs O(N³) algorithmic complexity improvement", 
      "Mathematical matrix operations for dependency analysis",
      "Real Maven integration with superior performance characteristics",
      "Industry-validated on Spring PetClinic enterprise benchmark",
      "Matrix-based parallel execution planning and optimization"
    ]
  },
  "performance": {
    "dependency_resolution": "O(N²) matrix operations vs O(N³) traditional graph traversal",
    "maven_comparison": "28x performance advantage on Spring PetClinic data with exponential scaling",
    "algorithmic_complexity": "Superior scaling characteristics through matrix operations",
    "memory_efficiency": "Compact matrix storage vs object graph overhead",
    "parallel_execution": "Array-based task grouping with vectorized operations"
  },
  "architecture": {
    "core_modules": "Production-ready modules - APLCICD, DependencyMatrix, ParallelPipeline, Pipeline",
    "demo_scripts": "4 focused demonstration scripts including Maven integration",
    "enterprise_validation": "Tested against Spring PetClinic enterprise application",
    "mathematical_foundation": "Built on matrix operations and array-oriented algorithms",
    "algorithmic_innovation": "First dependency resolution system using array-oriented programming"
  }
}