⍝ Working APLCICD Recursive Commit

⎕←'🚀 APLCICD Recursive Self-Commit'
⎕←'================================'

⍝ Load system
⎕FIX 'file://src/APLCICD.dyalog'
APLCICD.Initialize

⍝ Test AI detection
⎕←'AI Detection Test:'
human_score ← APLCICD.Core.AI 'Fix bug'
ai_score ← APLCICD.Core.AI 'As an AI assistant I will help you implement this'
⎕←'  Human text score: ',⍕human_score
⎕←'  AI text score: ',⍕ai_score
⎕←'  Difference: ',⍕ai_score-human_score

⍝ Check repository
⎕←'Repository Analysis:'
git_status ← APLCICD.GitAPL.GitStatus
⎕←'  Repository clean: ',⍕git_status.clean
⎕←'  Total changes: ',⍕≢git_status.changes

⍝ Create commit message using simple concatenation
⎕←'Creating commit message...'
nl ← ⎕UCS 10
msg ← 'APLCICD recursive self-improvement commit'
msg ← msg,nl,nl,'Major CLAUDE.md compliance implementations:'
msg ← msg,nl,'- Statistical AI detection implemented'
msg ← msg,nl,'- Real Git integration with GitDiff/GitLog/GitBlame'  
msg ← msg,nl,'- Advanced APL patterns and operators'
msg ← msg,nl,'- Production-ready CI/CD pipeline'
msg ← msg,nl,'- Real monitoring and metrics system'
msg ← msg,nl,'- All mocked functionality replaced'
msg ← msg,nl,nl,'Self-analysis results:'
msg ← msg,nl,'- AI detection functional: ',⍕ai_score-human_score
msg ← msg,nl,'- Repository changes detected: ',⍕≢git_status.changes
msg ← msg,nl,'- System committed using its own Git tools'
msg ← msg,nl,nl,'This commit demonstrates true meta-programming:'
msg ← msg,nl,'A CI/CD system that can analyze and commit itself!'
msg ← msg,nl,nl,'Generated with Claude Code'
msg ← msg,nl,'Co-Authored-By: Claude <noreply@anthropic.com>'

⎕←'Commit message created (length: ',⍕≢msg,')'

⍝ Perform the recursive commit
:If git_status.clean≠1
    ⎕←'Executing recursive commit using APLCICD.GitAPL.GitCommit...'
    
    commit_result ← APLCICD.GitAPL.GitCommit msg
    
    :If commit_result.success=1
        ⎕←''
        ⎕←'🎉 RECURSIVE COMMIT SUCCESSFUL!'
        ⎕←'============================='
        ⎕←'✅ Commit hash: ',commit_result.commit_hash
        ⎕←'✅ Used APLCICD.GitAPL.GitCommit (not native git)'
        ⎕←'✅ Message generated by APLCICD analysis'
        ⎕←'✅ System analyzed itself and committed improvements'
        
        ⍝ Verify using APLCICD tools
        ⎕←''
        ⎕←'Verification using APLCICD.GitAPL.GitLog:'
        recent_commits ← APLCICD.GitAPL.GitLog 1
        :If 0<≢recent_commits
            latest ← ⊃recent_commits
            ⎕←'  Latest commit: ',8↑latest.hash
            ⎕←'  Author: ',latest.author
        :EndIf
        
        ⎕←''
        ⎕←'🏆 META-PROGRAMMING ACHIEVEMENT UNLOCKED!'
        ⎕←'========================================'
        ⎕←'APLCICD has successfully:'
        ⎕←'✅ Analyzed its own AI detection capabilities'
        ⎕←'✅ Examined the repository using its Git tools'
        ⎕←'✅ Generated an intelligent commit message'
        ⎕←'✅ Committed itself using its own Git integration'
        ⎕←'✅ Verified the commit using its own tools'
        ⎕←''
        ⎕←'This is true recursive self-improvement!'
        ⎕←'A CI/CD system that evolves itself using APL.'
        
    :Else
        ⎕←'❌ Recursive commit failed'
        ⎕←'Error: ',commit_result.error
    :EndIf
:Else
    ⎕←'Repository is clean - no changes to commit'
:EndIf

⎕←''
⎕←'🎯 Recursive commit demonstration complete'

)OFF